version: 2.1

filters:
  branches:
    only:
      - main

workflows:
  semgrep:
    jobs:
      - semgrep-full-scan:
          name: Semgrep CE Scan
          fail-blocking: true
          report-filename: "${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}-$(date +'%Y%m%d-%H%M%S')"

jobs:
  semgrep-full-scan:
    description: |
      This job runs a full Semgrep scan to detect security issues and bad practices.
      It ensures that pull requests follow security and quality guidelines before merging.
  
    docker:
      - image: cimg/python:3.13.2

    parameters:
      fail-blocking:
        type: boolean
        description: "Fail the pipeline if blocking issues are found. Values : true, false"
        default: true
      semgrep-config:
        type: string
        description: |
          The Semgrep ruleset to use for scanning the codebase.
          Examples: p/owasp-top-ten, p/cwe-top-25, or auto for automatic rule selection.
          See https://semgrep.dev/docs/running-rules for more info.
        default: auto
      report-filename:
        type: string
        description: "Name of the exported report. Should not contain spaces and special characters except - and _"
        default: '${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}-pipeline-<<pipeline.number>>'
        # option with timestamp : "${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}-$(date +'%Y%m%d-%H%M%S')"
    steps:
      - checkout

      - run :
          name: Setup scan environment
          command: |
            pip install semgrep
            git clone https://github.com/lux10n/semgrep2html.git
            pip install -r semgrep2html/requirements.txt
            mkdir /tmp/reports
            echo <<parameters.report-filename>>
            echo 'export SEMGREP_REPORT_FILENAME=<<parameters.report-filename>>' >> "$BASH_ENV"

      - run:
          name: Run scan
          environment:
            SEMGREP_CONFIG: <<parameters.semgrep-config>>
          command: |
            semgrep scan \
              --config $SEMGREP_CONFIG \
              --json-output _semgrep-findings.json

      - run:
          name : Generate report
          command: |
            python semgrep2html/parse-semgrep.py \
              --input _semgrep-findings.json \
              --output /tmp/reports/$SEMGREP_REPORT_FILENAME.html \
              --project-name $CIRCLE_PROJECT_REPONAME \
              --branch $CIRCLE_BRANCH

      - store_artifacts:
          path: /tmp/reports
          destination: reports

      - run: 
          name: Fail if blocking issues exist
          environment:
            FAIL_BLOCKING: <<parameters.fail-blocking>>
          command: |
            BLOCKING_ISSUES=$(jq '[.results[] | select(.extra.severity == "ERROR")] | length' _semgrep-findings.json)
            if [ "$BLOCKING_ISSUES" -gt 0 ]; then
              if [ "$FAIL_BLOCKING" -eq 1 ]; then
                echo "[FAIL] $BLOCKING_ISSUES blocking issues detected! Please check the scanning steps for more details."
                exit 1
              else
                echo "[WARNING] $BLOCKING_ISSUES blocking issues detected, but pipeline will not fail due to configuration."
              fi
            else
              echo "[SUCCESS] No blocking issues found. Closing..."
            fi